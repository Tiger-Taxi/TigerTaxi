<?xml version="1.0"?>
<launch>

    <arg name="debug" default="false"/>
    <arg name="gui" default="true"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" ns="/tiger_taxi" args="--shutdown-time 1 --namespace=/tiger_taxi left_front_shock_controller
                                                 left_steering_joint_controller left_front_axle_controller
                                                 right_front_shock_controller right_steering_joint_controller
                                                 right_front_axle_controller left_rear_shock_controller
                                                 left_rear_axle_controller right_rear_shock_controller
                                                 right_rear_axle_controller joint_read_state_controller "/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find tt_start)/gazebo/config/tt_control.yaml" command="load"/>

    <!-- once the joint_state is published, run the robot_state_publisher, the namespace has to be adapted --> 
    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/tiger_taxi/joint_states" />
    </node>
    
    <node pkg="twist_mux" type="twist_mux" name="twist_mux">
        <rosparam command="load" file="$(find tt_start)/gazebo/config/twist_mux.yaml" />    
        <remap from="cmd_vel_out" to="/cmd_vel_out" />
    </node>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(find tt_start)/gazebo/worlds/tiger_taxi.world"/>
            <arg name="debug" value="$(arg debug)" />
            <arg name="gui" value="$(arg gui)" />
            <arg name="paused" value="false"/>
            <arg name="use_sim_time" value="true"/>
            <arg name="headless" value="false"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description"
                 command="$(find xacro)/xacro '$(find tt_start)/gazebo/xacro/tt_geo.urdf.xacro' --inorder" />

    <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
                args="-urdf -model tiger_taxi -param robot_description -z 1"/>

</launch>
