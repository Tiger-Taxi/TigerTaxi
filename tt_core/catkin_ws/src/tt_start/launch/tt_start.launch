<?xml version="1.0"?>
<launch>

    <!-- NOTE: TT_ROOT env variable must be set to TigerTaxi root directory -->
    <!-- NOTE (building): catkin_make -DCMAKE_BUILD_TYPE=release -DCATKIN_BLACKLIST_PACKAGES="safezone" -->

    <arg name="simulate" default="true"/>
    <arg name="collect_map" default="false"/>
    <arg name="use_static_map" default="true"/>
    <arg name="use_safezone" default="false"/>
    <arg name="mapAddress" default="$(find tt_start)/maps/circle_jerk_map.bt"/>
    <arg name="rviz" default="true"/>
    <arg name="rqt" default="true"/>

    <!-- Dependent on simulate (only true for simulation) -->
    <param name="/use_sim_time" value="$(arg simulate)"/>

    <!--<remap from="/velodyne_points" to="/velodyne_points_raw"/> &lt;!&ndash; TODO test this for velodyne sensor (not bag)... &ndash;&gt;-->
    <!-- Simulation: Use Bag Files -->
    <group if="$(arg simulate)">
        <node pkg="rosbag" type="play" name="teabag" output="screen"
              args="--clock --start=25 --rate=1 /home/ben/Downloads/Post_callibration_driving_around.bag /velodyne_points:=/velodyne_points_raw"/>
        <!--<node pkg="rosbag" type="play" name="teabag" output="screen"-->
        <!--args="&#45;&#45;clock &#45;&#45;rate=1 $(env TT_ROOT)/2018-10-18-14-39-25.bag"/>-->
    </group>


    <!-- GUI/Visualization Nodes -->
    <group if="$(arg rviz)">
        <node pkg="rviz" type="rviz" name="rviz" args="-d $(find tt_start)/map_costmaps_and_plans.rviz" output="screen"/>
    </group>
    <group if="$(arg rqt)">
        <include file="$(find tt_gui)/launch/tt_gui.launch"/>
        <node pkg="rqt_gui" type="rqt_gui" name="" args="--standalone tt_gui --lock-perspective --hide-title --clear-config"/>
    </group>

    <!-- Safezone-related -->
    <group if="$(arg use_safezone)">
        <node name="safezone" pkg="safezone" type="safezone"/>
    </group>

    <!-- TFs, odom used in all operation -->
    <include file="$(find tt_start)/launch/tt_tf.launch"/>
    <!-- Robot localization node -->
    <include file="$(find tt_start)/launch/ekf.launch"/>
    <!--<include file="$(find tt_start)/launch/scan_matcher.launch"/> TODO: debugging so disabled... -->
    <include file="$(find tt_start)/launch/p2l_2.launch"/>
    <!-- TODO: I do not believe that we are launching this properly (no nodelet manager), see: https://github.com/jack-oquin/velodyne_height_map/blob/master/tests/heightmap_nodelet_hz.test-->
    <node name="height_map" pkg="velodyne_height_map" type="heightmap_node"
          args="_height_threshold:=0.05 _full_clouds:=True _grid_dimensions:=250 _cell_size:=0.08"/>

    <include file="$(find loam_velodyne)/launch/loam_velodyne.launch"/>
    <include file="$(find odom_to_loam)/launch/odom_to_loam.launch"/>

    <!-- Unless we are simulating, launch sensor nodes -->
    <group unless="$(arg simulate)">
        <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch"/>
        <include file="$(find tt_start)/launch/urg_lidar.launch"/>
        <include file="$(find tt_start)/launch/vectornav.launch"/>

        <!-- Camera -->
        <!-- TODO: Confirm that this works or add new logic -->
        <!-- <include file="$(find video_stream_opencv)/launch/camera.launch"> -->
        <!--     <arg name="camera_name" value="camera"/> -->
        <!--     <arg name="video_stream_provider" value="0"/> -->
        <!--     <arg name="set_camera_fps" value="30"/> -->
        <!--     <arg name="buffer_queue_size" value="1"/> -->
        <!--     <arg name="fps" value="30"/> -->
        <!--     <arg name="frame_id" value="image"/> -->
        <!--     <arg name="camera_info_url" value=""/> -->
        <!--     <arg name="flip_horizontal" value="false"/> -->
        <!--     <arg name="flip_vertical" value="false"/> -->
        <!--     <arg name="width" value="1920"/> -->
        <!--     <arg name="height" value="1080"/> -->
        <!--     <arg name="visualize" value="false"/> -->
        <!-- </include> -->

        <!-- Arduinos -->
        <!-- TODO: Make sure this due launch fix works, and remove the following comments -->
        <!-- DUE's were removed from the start up script due to odd interactions that caused them to crash and the cart to run away.  Addeding the to the start script requires code changes in the rosdue node  -->
        <!-- DUE1 and DUE2 may swap depending on which one connects to the PC first -->
        <!-- <node pkg="rosdue" type="serial_due.py" name="due2" output="screen">
            <param name="port" value="/dev/ttyACM1"/>
        </node> -->
        <node pkg="rosdue" type="serial_due.py" name="due1" output="screen">
            <param name="port" value="/dev/ttyACM0"/>
        </node>
    </group>

    <!-- If we are collecting a map (manual driving) -->
    <group if="$(arg collect_map)">
        <include file="$(find tt_start)/launch/octomap.launch">
           <arg name="mapAddress" value="$(arg mapAddress)"/>
           <arg name="collectMap" value="$(arg collect_map)"/>
        </include>
    </group>

    <!-- Unless we are collecting a map (any driving mode) -->
    <group unless="$(arg collect_map)">
        <include file="$(find tt_start)/launch/move_base.launch">
            <arg name="use_safezone" value="$(arg use_safezone)"/>
        </include>
        <node pkg="tt_drive" type="cmd_vel_to_ackermann_drive.py" name="cmd_vel_converter" output="screen"/>
        <!-- Navigation within a static map -->
        <group if="$(arg use_static_map)">
            <!-- Use AMCL for all SLAM packages -->
            <include file="$(find tt_start)/launch/amcl.launch"/>
            <include file="$(find tt_start)/launch/octomap.launch">
                <arg name="mapAddress" value="$(arg mapAddress)"/>
                <arg name="collectMap" value="$(arg collect_map)"/>
            </include>
        </group>
    </group>

    <!-- TODO: Zach -->
    <include file="$(find tt_start)/launch/robot_self_filter.launch"/>


</launch>
