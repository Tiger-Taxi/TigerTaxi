ekf_se_odom:
 frequency: 10
 sensor_timeout: 0.2
 two_d_mode: true ## TODO - We're not working in a planar enviornemt, probably want to set to false
 transform_time_offset: 0.0
 transform_timeout: 0.0
 print_diagnostics: true
 debug: false
 smooth_lagged_data: true
 history_length: 1
 dynamic_process_noise_covariance: false
 reset_on_time_jump: true
 use_control: false
 control_config: [false, false, false,
                  false, false, false]
 ## acceleration_limit: Set in the future

 map_frame: map
 odom_frame: odom
 base_link_frame: base_link
 world_frame: odom


# pose0: pose_with_covariance_stamped # laser scan matcher
# pose0_config: [true,  true,  false,
#                true, true, false,
#                false, false, false,
#                false, false, false,
#                false, false, false]
# pose0_differential: false
# pose0_relative: false
# pose0_queue_size: 10
#  #pose0_rejection_threshold: 2  # Note the difference in parameter name
# pose0_nodelay: false

 pose0: integrated_to_map
 pose0_config: [true,  true,  false, #x y z
                true, true, true, #roll pitch yaw
                false, false, false, #vx yv yz
                false, false, false, #vroll vpitch vyaw
                false, false, false] #ax ay az
 pose0_queue_size: 10
 pose0_nodelay: false
 pose0_differential: false
 pose0_relative: false

# imu0: /imu/data
# imu0_config: [false, false, false,
#               true, true, false,
#               false, false, false,
#               true, true, true,
#               true, true, true]
# imu0_nodelay: true
# imu0_differential: false
# imu0_relative: false
# imu0_queue_size: 10
# imu0_remove_gravitational_acceleration: false

                            #x     y     z     r     p     y     vx     vy     vz    vr    vp    vy    ax    ay    az
 process_noise_covariance:  [1e-3, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    1e-3, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    1e-3, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0.3,  0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0.3,  0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0.01, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0.5,   0,     0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0.5,   0,    0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0.1,  0,    0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0.3,  0,    0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.3,  0,    0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.3,  0,    0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.3,  0,    0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.3,  0,
                             0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.3]

 initial_estimate_covariance: [1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    1.0,  0,    0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    1.0,  0,    0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    1.0,  0,     0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    1.0,   0,     0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1.0,   0,     0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1.0,   0,    0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1.0,  0,    0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1.0,  0,
                               0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1.0]
 
ekf_se_gps:
  frequency: 30
  sensor_timeout: 0.1
  two_d_mode: true #LOAM input and output must be 3D, otherwise the strange rotation of LOAM won't be supported
  transform_time_offset: 0.0
  transform_timeout: 0.0
  print_diagnostics: true
  smooth_lagged_data: true
  dynamic_process_noise_covariance: true
  debug: false
  debug_out_file: /home/roby/Desktop/gps_debug.txt

  #NOTE: technically not a good odom because it has GPS jumps
  map_frame: map
  odom_frame: odom
  base_link_frame: base_link
  world_frame: map

#  odom0: odometry/gps #From navsat_transform. Rectilinear coordinate system
#  odom0_config: [true,  true,  false,
#                false, false, false,
#                false, false, false,
#                false, false, false,
#                false, false, false]
#  odom0_queue_size: 10
#  odom0_nodelay: true
#  odom0_differential: false
#  3odom0_relative: false

 # odom1: odom #Visual odometry
 # odom1_config: [true,  true,  false,
 #                true, true, true,
 #                false, false, false,
 #                false, false, false,
 #                false, false, false]
 # odom1_queue_size: 10
 # odom1_nodelay: true
 # odom1_differential: true
 # odom1_relative: false

  pose0: integrated_to_map
  pose0_config: [true,  true,  false, #x y z
                 true, true, false, #roll pitch yaw
                 false, false, false, #vx yv yz
                 false, false, false, #vroll vpitch vyaw
                 false, false, false] #ax ay az
  pose0_queue_size: 10
  pose0_nodelay: false
  pose0_differential: true
  pose0_relative: false

  pose1: pose_with_covariance_stamped # laser scan matcher
  pose1_config: [true,  true,  false,
                 true, true, false,
                 false, false, false,
                 false, false, false,
                 false, false, false]
  pose1_differential: true
  pose1_relative: false
  pose1_queue_size: 10
  #pose0_rejection_threshold: 2  # Note the difference in parameter name
  pose1_nodelay: false
  
#  imu0: /imu/data
#  imu0_config: [false, false, false,
#                true, true,  false, #No yaw, since it's unreliable
#                false, false, false,
#                true, true, true,
#                true,  true,  false]
#  imu0_queue_size: 10
#  imu0_nodelay: false
#  imu0_differential: false
#  imu0_relative: false
#  imu0_remove_gravitational_acceleration: true

  use_control: false

                           #x     y     z     r     p     y     vx     vy     vz    vr    vp    vy    ax    ay    az
  process_noise_covariance:  [1e-3, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    1e-3, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    1e-3, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0.3,  0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0.3,  0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0.01, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0.5,   0,     0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0.5,   0,    0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0.1,  0,    0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0.3,  0,    0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.3,  0,    0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.3,  0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.3,  0,    0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.3,  0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.3]

  initial_estimate_covariance: [1e-9, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    1e-9, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    1e-9, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    1e-9, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    1.0,  0,    0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    1.0,  0,    0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    1.0,  0,     0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    1.0,   0,     0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1.0,   0,     0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1.0,   0,    0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1.0,  0,    0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1.0,  0,
                                0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1.0]

#An instance of navsat_transform_node, which takes in GPS data and produces pose data that has been transformed into your robot's world frame (here, gps_map).
#Inputs: gps/fix, imu/data, odometry/filtered (from the gps_map node http://docs.ros.org/lunar/api/robot_localization/html/integrating_gps.html "This should just be the output of whichever robot_localization state estimation node instance you are using to fuse GPS data.")
#Output: odometry/gps (feed this into a state estimate node), gps/filtered (Not necessary, but nice) 
navsat_transform:
  frequency: 30
  delay: 3.0
  magnetic_declination_radians: 0.1919875
  yaw_offset: 0
  zero_altitude: true
  broadcast_utm_transform: false
  publish_filtered_gps: false
  use_odometry_yaw: true # Check if odom message uses the magnetometer
  #May want to set this to true, since I can't trust the IMU's yaw
  wait_for_datum: false
  datum: [-37.9090714958, 145.132536733, 1.57]
