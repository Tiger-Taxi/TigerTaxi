obstacle_range: 10.0
raytrace_range: 10.0
#4'x8' => 1.2192m x 2.4384m 
#         0.6096m     1.2192m
#footprint: [[-0.6096, 1.2192], [0.6096, 1.2192], [0.6096, -1.2192],  [-0.6096, -1.2192]]
footprint: [[1.9384, -0.6096], [1.9384, 0.6096], [-0.5, 0.6096], [-0.5, -0.6096]]
#robot_radius: ir_of_robot
inflation_radius: .5

observation_sources: laser_scan_sensor point_cloud_sensor

# TODO: This is not a full config for mono-channel LiDAR...
laser_scan_sensor: {sensor_frame: frame_name, data_type: LaserScan, topic: topic_name, marking: true, clearing: true}
# TODO: we should read in output of pointcloud2laser (at least for gmapping)
point_cloud_sensor: {sensor_frame: velodyne, data_type: PointCloud2, topic: ground_object_cloud, marking: false, clearing: false}

##For this example we'll configure the costmap in voxel-grid mode
#map_type: voxel
#
##Voxel grid specific parameters
#origin_z: 0.0
#z_resolution: 0.2
#z_voxels: 10
#unknown_threshold: 9
#mark_threshold: 0
#
##Set the tolerance we're willing to have for tf transforms
#transform_tolerance: 0.3
#
##Obstacle marking parameters
#obstacle_range: 2.5
#max_obstacle_height: 2.0
#raytrace_range: 3.0
#
##The footprint of the robot and associated padding
#footprint: [[-0.325, -0.325], [-0.325, 0.325], [0.325, 0.325], [0.46, 0.0], [0.325, -0.325]]
#footprint_padding: 0.01
#
##Cost function parameters
#inflation_radius: 0.55
#cost_scaling_factor: 10.0
#
##The cost at which a cell is considered an obstacle when a map is read from the map_server
#lethal_cost_threshold: 100
#
##Configuration for the sensors that the costmap will use to update a map
#observation_sources: base_scan
#base_scan: {data_type: LaserScan, expected_update_rate: 0.4,
#            observation_persistence: 0.0, marking: true, clearing: true, max_obstacle_height: 0.4, min_obstacle_height: 0.08}
